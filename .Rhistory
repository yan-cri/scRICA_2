setwd('..')
install('scRICA/')
library(devtools)
document()
document()
setwd('..')
install('scRICA/')
integrateResDir     <- paste(getwd(), 'batch34_3369_3391_integration_rm3295A_dropseqSamps_fallopian_results/', sep = '/')
integrateResDir2    <- paste(getwd(), 'batch34_3369_3391_integration_rm3295A_fallopian_results/analysis_results_integration_results', sep = '/')
# integrateResDir     <- '/Users/yanli/Desktop/757_scRNA-seq/scRICA_results/scRICA_batch34_33693391_integration/batch34_3369_3391_integration_rm3295A_fallopian_results/analysis_results_integration_results'
goiFname            <- paste(getwd(), 'marker_genes/anno_marker_genes_ft.xlsx', sep = '/')
geneCellTypeOrder   <- c("MA", "ME","MFB", 'ST', "CE", "SE", "PE", "EP", "P/V", "SM", "EN", "EST", "LE", "T/NK", "MP", "B/P" )
## -------------------------------------------------------------------------------------##
## Add new annotation
newAnnoScript       <- paste(getwd(), 'newAnnotationDefine_falllopian_rm3295A_rmDropseq_matchedClusetersAbbrevName.R', sep = '/')
resDir = integrateResDir
rdsFname=NULL
newAnnotation = T
## ---
newAnnotation           <- as.logical(newAnnotation)
cellclusterNameSort
## ---
if (is.null(resDir) & !is.null(rdsFname)) {
rdsFname              <- rdsFname
resDir                <- getwd()
} else if (!is.null(resDir) & is.null(rdsFname)) {
rdsFname              <- sprintf('%s/RDS_Dir/%s.rds', resDir, basename(resDir))
resDir                <- resDir
} else {
stop("Error: please provide either option 'resDir' or 'rdsFname'. ")
}
seuratObjFinal          <<- readRDS(file = as.character(rdsFname))
integrateResDir     <- paste('/Users/yanli/Desktop/757_scRNA-seq/scRICA_results/scRICA_batch34_33693391_integration', 'batch34_3369_3391_integration_rm3295A_dropseqSamps_fallopian_results/', sep = '/')
integrateResDir2    <- paste(getwd(), 'batch34_3369_3391_integration_rm3295A_fallopian_results/analysis_results_integration_results', sep = '/')
# integrateResDir     <- '/Users/yanli/Desktop/757_scRNA-seq/scRICA_results/scRICA_batch34_33693391_integration/batch34_3369_3391_integration_rm3295A_fallopian_results/analysis_results_integration_results'
goiFname            <- paste(getwd(), 'marker_genes/anno_marker_genes_ft.xlsx', sep = '/')
geneCellTypeOrder   <- c("MA", "ME","MFB", 'ST', "CE", "SE", "PE", "EP", "P/V", "SM", "EN", "EST", "LE", "T/NK", "MP", "B/P" )
## -------------------------------------------------------------------------------------##
## Add new annotation
newAnnoScript       <- paste(getwd(), 'newAnnotationDefine_falllopian_rm3295A_rmDropseq_matchedClusetersAbbrevName.R', sep = '/')
resDir = integrateResDir
## ---
if (is.null(resDir) & !is.null(rdsFname)) {
rdsFname              <- rdsFname
resDir                <- getwd()
} else if (!is.null(resDir) & is.null(rdsFname)) {
rdsFname              <- sprintf('%s/RDS_Dir/%s.rds', resDir, basename(resDir))
resDir                <- resDir
} else {
stop("Error: please provide either option 'resDir' or 'rdsFname'. ")
}
resDir
rdsFname
rdsFname=NULL
## ---
if (is.null(resDir) & !is.null(rdsFname)) {
rdsFname              <- rdsFname
resDir                <- getwd()
} else if (!is.null(resDir) & is.null(rdsFname)) {
rdsFname              <- sprintf('%s/RDS_Dir/%s.rds', resDir, basename(resDir))
resDir                <- resDir
} else {
stop("Error: please provide either option 'resDir' or 'rdsFname'. ")
}
seuratObjFinal          <<- readRDS(file = as.character(rdsFname))
newAnnotationRscriptName = newAnnoScript
## ------
## update results directory if new annotation is used
if (newAnnotation) {
resDir                <- paste(resDir, 'results_wNewAnnotation', sep = '/')
} else {
resDir                <- paste(resDir, 'results_wOrgClusterAnnotation', sep = '/')
}
## -------------------------------------------------------------------------------------
if (newAnnotation) {
## Assign cell type identity to clusters
## redefine the level of Idents on the y-axis can be adjusted here by inputting order for cell annotation
source(as.character(newAnnotationRscriptName))
}
newAnnoScript       <- paste(getwd(), 'newAnnotationDefine_falllopian_rm3295A_rmDropseq_matchedClusetersAbbrevName.R', sep = '/')
newAnnoScript       <- paste('/Users/yanli/Desktop/757_scRNA-seq/scRICA_results/scRICA_batch34_33693391_integration', 'newAnnotationDefine_falllopian_rm3295A_rmDropseq_matchedClusetersAbbrevName.R', sep = '/')
newAnnotationRscriptName = newAnnoScript
## -------------------------------------------------------------------------------------
if (newAnnotation) {
## Assign cell type identity to clusters
## redefine the level of Idents on the y-axis can be adjusted here by inputting order for cell annotation
source(as.character(newAnnotationRscriptName))
}
expCondCheck = 'comb'
## -------------------------------------------------------------------------------------
if (expCondCheck == 'sample') {
if (is.null(expCondSepName)) {
expCondSepName        <- 'expCond_sample'
} else {
expCondSepName        <- expCondSepName
}
} else {
if (is.null(expCondSepName)) {
expCondSepName        <- as.character(expCondCheck)
} else {
expCondSepName        <- expCondSepName
}
}
expCondSepName = NULL
## -------------------------------------------------------------------------------------
if (expCondCheck == 'sample') {
if (is.null(expCondSepName)) {
expCondSepName        <- 'expCond_sample'
} else {
expCondSepName        <- expCondSepName
}
} else {
if (is.null(expCondSepName)) {
expCondSepName        <- as.character(expCondCheck)
} else {
expCondSepName        <- expCondSepName
}
}
## ------
if (expCondCheck == 'sample') {
seuratObjFinal                     <- seuratObjFinal
} else if (expCondCheck == 'comb') {
seuratObjFinal@meta.data$expCond   <- Idents(seuratObjFinal)
} else if (expCondCheck == 'expCond1') {
if (!'expCond1' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond1' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond1
}
} else if (expCondCheck == 'expCond2') {
if (!'expCond2' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond2' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond2
}
}
dotPlotSampReorderLevels
table(Idents(seuratObjFinal))
table(factor(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_')))
length(Idents(seuratObjFinal))
levels(factor(seuratObjFinal$expCond))
factor(seuratObjFinal$expCond, levels = expCondReorderLevels))
factor(seuratObjFinal$expCond, levels = expCondReorderLevels)
expCondReorderLevels <- c('ST1', "ST2",   "ST3" ,  "ST4"  , "ST5"  , "ST6"  , "CE"  ,  "SE"  ,  "P/V1" , "P/V2" , "P/V3" , "SM" ,   "EN1" ,  "EN2",   "LE"  ,  "T/NK1", "T/NK2", "T/NK3", "MP"   , "B/P" , 'MA')
expCondReorderLevels
levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels))
head(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'))
levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels))
head(factor(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'), levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') ))
length(factor(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'), levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') ))
head(factor(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'), levels = unlist(lapply(levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), function(x) paste(levels(Idents(seuratObjFinal)), x, sep = '_')) ) ))
length(factor(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'), levels = unlist(lapply(levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), function(x) paste(levels(Idents(seuratObjFinal)), x, sep = '_')) ) ))
expCondReorderLevels
expCondReorderLevels = NULL
expCondReorderLevels               <- levels(factor(seuratObjFinal@meta.data$expCond))
expCondReorderLevels
expCondCheck
expCondCheck = 'sample'
## ------
if (expCondCheck == 'sample') {
seuratObjFinal                     <- seuratObjFinal
} else if (expCondCheck == 'comb') {
seuratObjFinal@meta.data$expCond   <- Idents(seuratObjFinal)
} else if (expCondCheck == 'expCond1') {
if (!'expCond1' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond1' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond1
}
} else if (expCondCheck == 'expCond2') {
if (!'expCond2' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond2' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond2
}
}
head(Idents(seuratObjFinal)  )
length(Idents(seuratObjFinal)  )
levels(factor(seuratObjFinal@meta.data$expCond))
head(seuratObjFinal)
seuratObjFinal          <<- readRDS(file = as.character(rdsFname))
## -------------------------------------------------------------------------------------
if (newAnnotation) {
## Assign cell type identity to clusters
## redefine the level of Idents on the y-axis can be adjusted here by inputting order for cell annotation
source(as.character(newAnnotationRscriptName))
}
## -------------------------------------------------------------------------------------
if (expCondCheck == 'sample') {
if (is.null(expCondSepName)) {
expCondSepName        <- 'expCond_sample'
} else {
expCondSepName        <- expCondSepName
}
} else {
if (is.null(expCondSepName)) {
expCondSepName        <- as.character(expCondCheck)
} else {
expCondSepName        <- expCondSepName
}
}
head(seuratObjFinal)
seuratObjFinalOrg <- seuratObjFinal
## ------
if (expCondCheck == 'sample') {
seuratObjFinal                     <- seuratObjFinal
} else if (expCondCheck == 'comb') {
seuratObjFinal@meta.data$expCond   <- Idents(seuratObjFinal)
} else if (expCondCheck == 'expCond1') {
if (!'expCond1' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond1' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond1
}
} else if (expCondCheck == 'expCond2') {
if (!'expCond2' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond2' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond2
}
}
expCondReorderLevels
expCondReorderLevels = NULL
## level name: cluster in front of expCond
# Idents(seuratObjFinal) <- factor(paste(seuratObjFinal$seurat_clusters, seuratObjFinal$expCond, sep = '_'), levels = unlist(lapply(levels(seuratObjFinal$seurat_clusters), function(x) paste(x, levels(factor(seuratObjFinal$expCond)), sep = '_')) ) )
## level name: cluster after expCond
## ---
if (is.null(expCondReorderLevels)) {
expCondReorderLevels          <- levels(factor(seuratObjFinal@meta.data$expCond))
}
(expCondReorderLevels %in% levels(factor(seuratObjFinal$expCond)))
if ( !all(expCondReorderLevels %in% levels(factor(seuratObjFinal$expCond))) ) stop("Please provide correct corresponding 'expCondReorderLevels' to sort y-axis dot plot")
head(Idents(seuratObjFinal))
length(factor(Idents(seuratObjFinal), levels = expCondReorderLevels))
head(factor(Idents(seuratObjFinal), levels = expCondReorderLevels))
expCondReorderLevels
expCondCheck != 'comb'
head(factor(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'), levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') ))
table(factor(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'), levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') ))
head(*Idents(seuratObjFinal))
head(Idents(seuratObjFinal))
head(factor(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'), levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') ))
seuratObjFinal <- seuratObjFinalOrg
expCondCheck = 'expCond1'
head(seuratObjFinal)
## ------
if (expCondCheck == 'sample') {
seuratObjFinal                     <- seuratObjFinal
} else if (expCondCheck == 'comb') {
seuratObjFinal@meta.data$expCond   <- Idents(seuratObjFinal)
} else if (expCondCheck == 'expCond1') {
if (!'expCond1' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond1' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond1
}
} else if (expCondCheck == 'expCond2') {
if (!'expCond2' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond2' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond2
}
}
head(seuratObjFinal)
## ------
print(table(Idents(seuratObjFinal)))
expCondReorderLevels = c('F', 'A', 'I')
expCondReorderLevels
levels(factor(seuratObjFinal@meta.data$expCond))
levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels))
length(levels(factor(seuratObjFinal$expCond))) )
length(levels(factor(seuratObjFinal$expCond)))
levels(Idents(seuratObjFinal))
head(Idents(seuratObjFinal))
length(Idents(seuratObjFinal))
head(seuratObjFinal$expCond)
levels(Idents(seuratObjFinal)
)
length(paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_'))
levels(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'))
levels(factor(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_')))
levels(paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_'))
levels(factor(paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_')))
expCondReorderLevels
length(paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_'))
head(paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_'))
head(levels(Idents(seuratObjFinal))
)
paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_')
if (expCondCheck != 'comb') {
Idents(seuratObjFinal)        <- factor( paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'),
levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') )
} else {
Idents(seuratObjFinal)        <- factor(Idents(seuratObjFinal), levels = expCondReorderLevels)
}
table(Idents(seuratObjFinal))
seuratObjFinal = seuratObjFinalOrg
table(Idents(seuratObjFinal))
## ------
if (expCondCheck == 'sample') {
seuratObjFinal                     <- seuratObjFinal
} else if (expCondCheck == 'comb') {
seuratObjFinal@meta.data$expCond   <- Idents(seuratObjFinal)
} else if (expCondCheck == 'expCond1') {
if (!'expCond1' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond1' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond1
}
} else if (expCondCheck == 'expCond2') {
if (!'expCond2' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond2' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond2
}
}
expCondReorderLevels          <- levels(factor(seuratObjFinal@meta.data$expCond))
Idents(seuratObjFinal)
table(Idents(seuratObjFinal) )
if (expCondCheck != 'comb') {
Idents(seuratObjFinal)        <- factor( paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'),
levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') )
} else {
Idents(seuratObjFinal)        <- factor(Idents(seuratObjFinal), levels = expCondReorderLevels)
}
table(Idents(seuratObjFinal) )
seuratObjFinal = seuratObjFinalOrg
seuratObjFinal@meta.data$expCond   <- Idents(seuratObjFinal)
expCondCheck = 'comb'
expCondReorderLevels          <- levels(factor(seuratObjFinal@meta.data$expCond))
if (expCondCheck != 'comb') {
Idents(seuratObjFinal)        <- factor( paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'),
levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') )
} else {
Idents(seuratObjFinal)        <- factor(Idents(seuratObjFinal), levels = expCondReorderLevels)
}
table(Idents(seuratObjFinal))
seuratObjFinal =  seuratObjFinalOrg
expCondCheck ='expCond1'
## ------
if (expCondCheck == 'sample') {
seuratObjFinal                     <- seuratObjFinal
} else if (expCondCheck == 'comb') {
seuratObjFinal@meta.data$expCond   <- Idents(seuratObjFinal)
} else if (expCondCheck == 'expCond1') {
if (!'expCond1' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond1' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond1
}
} else if (expCondCheck == 'expCond2') {
if (!'expCond2' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond2' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond2
}
}
expCondReorderLevels
levels(factor(seuratObjFinal@meta.data$expCond))
expCondReorderLevels <- c('I', 'A', 'F')
if (expCondCheck != 'comb') {
Idents(seuratObjFinal)        <- factor( paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'),
levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') )
} else {
Idents(seuratObjFinal)        <- factor(Idents(seuratObjFinal), levels = expCondReorderLevels)
}
table(Idents(seuratObjFinal)  )
seuratObjFinal = seuratObjFinalOrg
expCondCheck = 'expCond2'
## ------
if (expCondCheck == 'sample') {
seuratObjFinal                     <- seuratObjFinal
} else if (expCondCheck == 'comb') {
seuratObjFinal@meta.data$expCond   <- Idents(seuratObjFinal)
} else if (expCondCheck == 'expCond1') {
if (!'expCond1' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond1' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond1
}
} else if (expCondCheck == 'expCond2') {
if (!'expCond2' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond2' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond2
}
}
levels(factor(seuratObjFinal@meta.data$expCond))
expCondReorderLevels
## re-define Idents(seuratObjFinal) with level name: cluster + expCond if expCondCheck != 'comb'
## ---
if (is.null(expCondReorderLevels)) {
expCondReorderLevels          <- levels(factor(seuratObjFinal@meta.data$expCond))
}
if ( !all(expCondReorderLevels %in% levels(factor(seuratObjFinal$expCond))) ) stop("Please provide correct corresponding 'expCondReorderLevels' to sort y-axis dot plot")
expCondReorderLevels          <- levels(factor(seuratObjFinal@meta.data$expCond))
if ( !all(expCondReorderLevels %in% levels(factor(seuratObjFinal$expCond))) ) stop("Please provide correct corresponding 'expCondReorderLevels' to sort y-axis dot plot")
if (expCondCheck != 'comb') {
Idents(seuratObjFinal)        <- factor( paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'),
levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') )
} else {
Idents(seuratObjFinal)        <- factor(Idents(seuratObjFinal), levels = expCondReorderLevels)
}
table(Idents(seuratObjFinal))
library(devtools)
getwd()
document()
document()
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
?cowplot::plot_grid
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
length( levels(factor(Idents(seuratObjFinal))))
11*0.4
11*0.8
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
21*0.25
21*0.4
21*0.45
25*0.4
25 < 25
25 > 24
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
library(ggplot2)
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
21*0.4
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
?ggsave
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
?element_text
setwd('scRICA/')
document()
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
21*8
21*3
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')

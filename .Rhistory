if (!'expCond2' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond2' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond2
}
}
head(Idents(seuratObjFinal)  )
length(Idents(seuratObjFinal)  )
levels(factor(seuratObjFinal@meta.data$expCond))
head(seuratObjFinal)
seuratObjFinal          <<- readRDS(file = as.character(rdsFname))
## -------------------------------------------------------------------------------------
if (newAnnotation) {
## Assign cell type identity to clusters
## redefine the level of Idents on the y-axis can be adjusted here by inputting order for cell annotation
source(as.character(newAnnotationRscriptName))
}
## -------------------------------------------------------------------------------------
if (expCondCheck == 'sample') {
if (is.null(expCondSepName)) {
expCondSepName        <- 'expCond_sample'
} else {
expCondSepName        <- expCondSepName
}
} else {
if (is.null(expCondSepName)) {
expCondSepName        <- as.character(expCondCheck)
} else {
expCondSepName        <- expCondSepName
}
}
head(seuratObjFinal)
seuratObjFinalOrg <- seuratObjFinal
## ------
if (expCondCheck == 'sample') {
seuratObjFinal                     <- seuratObjFinal
} else if (expCondCheck == 'comb') {
seuratObjFinal@meta.data$expCond   <- Idents(seuratObjFinal)
} else if (expCondCheck == 'expCond1') {
if (!'expCond1' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond1' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond1
}
} else if (expCondCheck == 'expCond2') {
if (!'expCond2' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond2' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond2
}
}
expCondReorderLevels
expCondReorderLevels = NULL
## level name: cluster in front of expCond
# Idents(seuratObjFinal) <- factor(paste(seuratObjFinal$seurat_clusters, seuratObjFinal$expCond, sep = '_'), levels = unlist(lapply(levels(seuratObjFinal$seurat_clusters), function(x) paste(x, levels(factor(seuratObjFinal$expCond)), sep = '_')) ) )
## level name: cluster after expCond
## ---
if (is.null(expCondReorderLevels)) {
expCondReorderLevels          <- levels(factor(seuratObjFinal@meta.data$expCond))
}
(expCondReorderLevels %in% levels(factor(seuratObjFinal$expCond)))
if ( !all(expCondReorderLevels %in% levels(factor(seuratObjFinal$expCond))) ) stop("Please provide correct corresponding 'expCondReorderLevels' to sort y-axis dot plot")
head(Idents(seuratObjFinal))
length(factor(Idents(seuratObjFinal), levels = expCondReorderLevels))
head(factor(Idents(seuratObjFinal), levels = expCondReorderLevels))
expCondReorderLevels
expCondCheck != 'comb'
head(factor(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'), levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') ))
table(factor(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'), levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') ))
head(*Idents(seuratObjFinal))
head(Idents(seuratObjFinal))
head(factor(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'), levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') ))
seuratObjFinal <- seuratObjFinalOrg
expCondCheck = 'expCond1'
head(seuratObjFinal)
## ------
if (expCondCheck == 'sample') {
seuratObjFinal                     <- seuratObjFinal
} else if (expCondCheck == 'comb') {
seuratObjFinal@meta.data$expCond   <- Idents(seuratObjFinal)
} else if (expCondCheck == 'expCond1') {
if (!'expCond1' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond1' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond1
}
} else if (expCondCheck == 'expCond2') {
if (!'expCond2' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond2' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond2
}
}
head(seuratObjFinal)
## ------
print(table(Idents(seuratObjFinal)))
expCondReorderLevels = c('F', 'A', 'I')
expCondReorderLevels
levels(factor(seuratObjFinal@meta.data$expCond))
levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels))
length(levels(factor(seuratObjFinal$expCond))) )
length(levels(factor(seuratObjFinal$expCond)))
levels(Idents(seuratObjFinal))
head(Idents(seuratObjFinal))
length(Idents(seuratObjFinal))
head(seuratObjFinal$expCond)
levels(Idents(seuratObjFinal)
)
length(paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_'))
levels(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'))
levels(factor(paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_')))
levels(paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_'))
levels(factor(paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_')))
expCondReorderLevels
length(paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_'))
head(paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_'))
head(levels(Idents(seuratObjFinal))
)
paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_')
if (expCondCheck != 'comb') {
Idents(seuratObjFinal)        <- factor( paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'),
levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') )
} else {
Idents(seuratObjFinal)        <- factor(Idents(seuratObjFinal), levels = expCondReorderLevels)
}
table(Idents(seuratObjFinal))
seuratObjFinal = seuratObjFinalOrg
table(Idents(seuratObjFinal))
## ------
if (expCondCheck == 'sample') {
seuratObjFinal                     <- seuratObjFinal
} else if (expCondCheck == 'comb') {
seuratObjFinal@meta.data$expCond   <- Idents(seuratObjFinal)
} else if (expCondCheck == 'expCond1') {
if (!'expCond1' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond1' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond1
}
} else if (expCondCheck == 'expCond2') {
if (!'expCond2' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond2' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond2
}
}
expCondReorderLevels          <- levels(factor(seuratObjFinal@meta.data$expCond))
Idents(seuratObjFinal)
table(Idents(seuratObjFinal) )
if (expCondCheck != 'comb') {
Idents(seuratObjFinal)        <- factor( paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'),
levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') )
} else {
Idents(seuratObjFinal)        <- factor(Idents(seuratObjFinal), levels = expCondReorderLevels)
}
table(Idents(seuratObjFinal) )
seuratObjFinal = seuratObjFinalOrg
seuratObjFinal@meta.data$expCond   <- Idents(seuratObjFinal)
expCondCheck = 'comb'
expCondReorderLevels          <- levels(factor(seuratObjFinal@meta.data$expCond))
if (expCondCheck != 'comb') {
Idents(seuratObjFinal)        <- factor( paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'),
levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') )
} else {
Idents(seuratObjFinal)        <- factor(Idents(seuratObjFinal), levels = expCondReorderLevels)
}
table(Idents(seuratObjFinal))
seuratObjFinal =  seuratObjFinalOrg
expCondCheck ='expCond1'
## ------
if (expCondCheck == 'sample') {
seuratObjFinal                     <- seuratObjFinal
} else if (expCondCheck == 'comb') {
seuratObjFinal@meta.data$expCond   <- Idents(seuratObjFinal)
} else if (expCondCheck == 'expCond1') {
if (!'expCond1' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond1' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond1
}
} else if (expCondCheck == 'expCond2') {
if (!'expCond2' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond2' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond2
}
}
expCondReorderLevels
levels(factor(seuratObjFinal@meta.data$expCond))
expCondReorderLevels <- c('I', 'A', 'F')
if (expCondCheck != 'comb') {
Idents(seuratObjFinal)        <- factor( paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'),
levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') )
} else {
Idents(seuratObjFinal)        <- factor(Idents(seuratObjFinal), levels = expCondReorderLevels)
}
table(Idents(seuratObjFinal)  )
seuratObjFinal = seuratObjFinalOrg
expCondCheck = 'expCond2'
## ------
if (expCondCheck == 'sample') {
seuratObjFinal                     <- seuratObjFinal
} else if (expCondCheck == 'comb') {
seuratObjFinal@meta.data$expCond   <- Idents(seuratObjFinal)
} else if (expCondCheck == 'expCond1') {
if (!'expCond1' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond1' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond1
}
} else if (expCondCheck == 'expCond2') {
if (!'expCond2' %in% colnames(seuratObjFinal@meta.data)){
print("Error: 'expCond2' has not been included in the original integration analysis.")
seuratObjFinal@meta.data$expCond <- gsub(pattern = as.character(expCondName2change), replacement = '', x = seuratObjFinal@meta.data$expCond)
} else {
seuratObjFinal@meta.data$expCond <- seuratObjFinal@meta.data$expCond2
}
}
levels(factor(seuratObjFinal@meta.data$expCond))
expCondReorderLevels
## re-define Idents(seuratObjFinal) with level name: cluster + expCond if expCondCheck != 'comb'
## ---
if (is.null(expCondReorderLevels)) {
expCondReorderLevels          <- levels(factor(seuratObjFinal@meta.data$expCond))
}
if ( !all(expCondReorderLevels %in% levels(factor(seuratObjFinal$expCond))) ) stop("Please provide correct corresponding 'expCondReorderLevels' to sort y-axis dot plot")
expCondReorderLevels          <- levels(factor(seuratObjFinal@meta.data$expCond))
if ( !all(expCondReorderLevels %in% levels(factor(seuratObjFinal$expCond))) ) stop("Please provide correct corresponding 'expCondReorderLevels' to sort y-axis dot plot")
if (expCondCheck != 'comb') {
Idents(seuratObjFinal)        <- factor( paste(Idents(seuratObjFinal), seuratObjFinal$expCond, sep = '_'),
levels = paste(rep(levels(Idents(seuratObjFinal)), each = length(levels(factor(seuratObjFinal$expCond))) ), levels(factor(seuratObjFinal$expCond, levels = expCondReorderLevels)), sep = '_') )
} else {
Idents(seuratObjFinal)        <- factor(Idents(seuratObjFinal), levels = expCondReorderLevels)
}
table(Idents(seuratObjFinal))
library(devtools)
getwd()
document()
document()
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
?cowplot::plot_grid
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
length( levels(factor(Idents(seuratObjFinal))))
11*0.4
11*0.8
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
21*0.25
21*0.4
21*0.45
25*0.4
25 < 25
25 > 24
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
library(ggplot2)
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
21*0.4
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
?ggsave
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
?element_text
setwd('scRICA/')
document()
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
21*8
21*3
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
21.25/339.95
0.0625*139.99
139.99+8.75
?as.dendrogram
library(devtools)
document()
document()
document()
document()
document()
setwd('..')
install('scRICA/')
library(devtools)
document()
document()
document()
document()
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
setwd('scRICA/')
document()
document()
document()
document()
setwd('..')
install('scRICA/')
library(devtools)
document()
document()
document()
build_vignettes()
document()
document()
setwd('..')
install('scRICA/')
library(devtools)
library(devtools)
getwd()
library(devtools)
getwd()
setwd('..')
getwd()
setwd('testPackage/')
getwd()
library(devtools)
metadata                <- read.delim2(file = system.file('extdata', 'metadata_mac.txt', package = 'scRICA', mustWork = T), header = T)
system.file('extdata', 'metadata_mac.txt', package = 'scRICA', mustWork = T)
system.file()
system.file(package = 'scRICA')
?system.file
system.file('extdata/metadata_mac.txt', package = 'scRICA', mustWork = T)
list.files(system.file('extdata', package = 'scRICA', mustWork = T))
library(devtools)
build_vignettes()
vignette('scRICA')
setwd('..')
setwd('scRICA/')
document()
document()
setwd('..')
install('scRICA/')
library(scRICA)
vignette(scRICA)
vignette('scRICA')
?vignette
vignette(package = 'scRICA')
?browseVignettes()
browseVignettes(package = 'scRICA')
library(scRICA)
browseVignettes(package = 'scRICA')
library(devtools)
document()
usethis::use_vignette("my-vignette")
usethis::use_vignette("scRICA_v1")
devtools::build_vignettes()
library(scRICA)
browseVignettes(package = 'scRICA')
browseVignettes(package = 'scRICA')
library(scRICA)
browseVignettes(package = 'scRICA')
browseVignettes(package = 'scRICA')
browseVignettes(package = 'scRICA')
usethis::use_vignette("scRICA_v1")
devtools::build_vignettes()
browseVignettes(package = 'scRICA')
library(scRICA)
browseVignettes(package = 'scRICA')
browseVignettes(package = 'scRICA')
browseVignettes(package = 'scRICA')
browseVignettes(package = 'scRICA')
library(scRICA)
browseVignettes(package = 'scRICA')
devtools::build_vignettes()
devtools::build_vignettes()
devtools::document()
setwd('..')
library(devtools)
install('scRICA/')
browseVignettes(package = 'scRICA')
library(scRICA)
browseVignettes(package = 'scRICA')
browseVignettes(package = 'scRICA')
devtools::build_vignettes()
browseVignettes(package = 'scRICA')
library(scRICA)
browseVignettes(package = 'scRICA')
browseVignettes(package = 'scRICA')
getwd()
setwd('scRICA/')
library(devtools)
document()
browseVignettes(package = 'scRICA')
browseVignettes(package = 'scRICA')
browseVignettes(package = 'scRICA')
build_vignettes()
browseVignettes(package = 'scRICA')
browseVignettes(package = 'scRICA')
library(scRICA)
browseVignettes(package = 'scRICA')
browseVignettes(package = 'scRICA')
library(scRICA)
browseVignettes(package = 'scRICA')
browseVignettes(package = 'scRICA')
library(scRICA)
browseVignettes(package = 'scRICA')
getwd()
library(devtools)
build_vignettes()
browseVignettes(package = 'scRICA')
?build_vignettes
build_vignettes(pkg = 'scRICA')
browseVignettes(package = 'scRICA')
browseVignettes(package = 'scRICA')
library(scRICA)
browseVignettes('scRICA')
browseVignettes('scRICA')
browseVignettes()
browseVignettes('scRICA')
browseVignettes(package = 'scRICA')
getwd()
library(devtools)
build_vignettes()
browseVignettes()
library(scRICA)
browseVignettes()
browseVignettes(package = 'scRICA')
browseVignettes(package = 'scRICA')
library(scRICA)
browseVignettes(package = 'scRICA')
library(devtools)
getwd()
build_vignettes()
devtools::install(build_vignettes = TRUE)
browseVignettes(package = 'scRICA')
browseVignettes()
library(devtools)
# library(devtools)
# build_vignettes()
# devtools::install(build_vignettes = TRUE)
browseVignettes(package = 'scRICA)
''
'
browseVignettes(package = 'scRICA')
